import logging
import sys
import asyncio
from zoneinfo import ZoneInfo

from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    CallbackQueryHandler,
    filters,
    Defaults,
)

from config import settings        # –≤–∞—à –º–æ–¥—É–ª—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
from database import Database      # –≤–∞—à –º–æ–¥—É–ª—å –ë–î
import handlers                    # –≤–∞—à –º–æ–¥—É–ª—å —Å —Ö–µ–Ω–¥–ª–µ—Ä–∞–º–∏


def main():
    # 1) –õ–æ–≥–∏
    logging.basicConfig(
        level=logging.INFO,
        format="%(asctime)s | %(levelname)s | %(name)s | %(message)s"
    )
    logger = logging.getLogger(__name__)
    logger.info("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")

    # 2) Windows / Python 3.12: –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –ø–æ–ª–∏—Ç–∏–∫–∞ —Ü–∏–∫–ª–∞ —Å–æ–±—ã—Ç–∏–π
    if sys.platform.startswith("win"):
        try:
            asyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy())
        except Exception:
            pass

    # 3) –°–æ–∑–¥–∞—ë–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º event loop
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)

    # 4) –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î –≤ —Ç–µ–∫—É—â–µ–º loop‚Äô–µ
    loop.run_until_complete(Database.init())

    # 5) –¢–∞–π–º–∑–æ–Ω–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    tz_name = getattr(settings, "TIMEZONE", "Europe/Moscow")
    TZ = ZoneInfo(tz_name)

    # 6) –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ PTB
    app = (
        Application.builder()
        .token(settings.TELEGRAM_TOKEN)
        .defaults(Defaults(tzinfo=TZ))
        .build()
    )

    # 7) –•–µ–Ω–¥–ª–µ—Ä—ã

    # –î–∞–Ω–Ω—ã–µ –∏–∑ WebApp (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è)
    if hasattr(handlers, "handle_webapp_data"):
        app.add_handler(MessageHandler(filters.StatusUpdate.WEB_APP_DATA, handlers.handle_webapp_data))

    # –ö–æ–º–∞–Ω–¥—ã
    app.add_handler(CommandHandler("start", handlers.start))
    app.add_handler(CommandHandler("profile", handlers.profile))

    if hasattr(handlers, "clear_db"):
        app.add_handler(CommandHandler("clear_db", handlers.clear_db))
    if hasattr(handlers, "delete_db"):
        app.add_handler(CommandHandler("delete_db", handlers.delete_db))
    if hasattr(handlers, "reminders"):
        app.add_handler(CommandHandler("reminders", handlers.reminders))
    if hasattr(handlers, "start_workout"):
        app.add_handler(CommandHandler("start_workout", handlers.start_workout))
    if hasattr(handlers, "end_workout"):
        app.add_handler(CommandHandler("end_workout", handlers.end_workout))

    # –§–æ—Ç–æ (–∏ –¥–æ–∫—É–º–µ–Ω—Ç image/*)
    app.add_handler(
        MessageHandler(
            (filters.PHOTO | filters.Document.IMAGE) & ~filters.COMMAND,
            handlers.register_photo
        )
    )

    # >>> –ü–æ—Ä—è–¥–æ–∫ callback‚Äô–æ–≤ –í–ê–ñ–ï–ù! <<<
    # 1) –î–µ–ø–æ–∑–∏—Ç–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ (–ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–∫–Ω–∞ / –ø—Ä–∏ —Å–ø–∏—Å–∞–Ω–∏–∏)
    #    depwin_repeat, depwin_change_amount, depwin_change_sched, depwin_later, depforf_restart
    app.add_handler(
        CallbackQueryHandler(
            handlers.deposit_callback,
            pattern=r"^(depwin_|depforf_)",
            block=True,
        )
    )

    # 2) –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –∏–Ω–ª–∞–π–Ω—ã:
    #    - —ç–∫—Ä–∞–Ω 1 ‚Üí —ç–∫—Ä–∞–Ω 2: ob_next            ‚Üê –î–û–ë–ê–í–õ–ï–ù–û
    #    - —Å—Ç–∞—Ä—Ç 3 –≤–æ–ø—Ä–æ—Å–æ–≤: qa_begin
    #    - —Ç—É–º–±–ª–µ—Ä—ã –¥–Ω–µ–π/–≤—Ä–µ–º–µ–Ω–∏/–æ—Ç–¥—ã—Ö–∞/–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏: days_*, time_*, rest*, dur_*
    #    - –≤—ã–±–æ—Ä –¥–µ–ø–æ–∑–∏—Ç–∞: dep_ok / dep_custom
    app.add_handler(
        CallbackQueryHandler(
            handlers.register_callback,
            pattern=r"^(ob_next$|qa_begin$|days_|time_|rest|dur_|dep_(ok|custom)$)",
            block=True,
        )
    )

    # 3) –ü—Ä–æ—á–∏–µ callback‚Äô–∏ –º–µ–Ω—é ‚Äî –∫–∞–∫ —Ñ–æ–ª–±—ç–∫ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    if hasattr(handlers, "menu_callback"):
        app.add_handler(CallbackQueryHandler(handlers.menu_callback, block=False))

    # –ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ—Ñ–∏–ª—å" –∏–∑ ReplyKeyboard
    app.add_handler(MessageHandler(filters.Regex(r"^üìä –ü—Ä–æ—Ñ–∏–ª—å$"), handlers.profile))

    # –¢–µ–∫—Å—Ç–æ–≤—ã–π —Ä–æ—É—Ç–µ—Ä (–∏–¥—ë—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–º)
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handlers.handle_text))

    # 8) –ó–∞–ø—É—Å–∫ polling
    logger.info("–°—Ç–∞—Ä—Ç—É–µ–º polling...")
    app.run_polling(allowed_updates=None)


if __name__ == "__main__":
    main()
