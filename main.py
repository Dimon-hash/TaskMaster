import logging
import sys
import asyncio
from zoneinfo import ZoneInfo

from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    CallbackQueryHandler,
    filters,
    Defaults,
)

from config import settings
from database import Database
import handlers


def main():
    # 1) –õ–æ–≥–∏
    logging.basicConfig(level=logging.INFO)
    logger = logging.getLogger(__name__)

    # 2) Windows / Python 3.12 ‚Äî –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –ø–æ–ª–∏—Ç–∏–∫–∞ —Ü–∏–∫–ª–∞
    if sys.platform.startswith("win"):
        asyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy())

    # 3) –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î
    asyncio.run(Database.init())

    # 4) –¢–∞–π–º–∑–æ–Ω–∞
    TZ = ZoneInfo(getattr(settings, "TIMEZONE", "Europe/Moscow"))

    # 5) –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    app = (
        Application.builder()
        .token(settings.TELEGRAM_TOKEN)
        .defaults(Defaults(tzinfo=TZ))
        .build()
    )

    # 6) –•–µ–Ω–¥–ª–µ—Ä—ã
    if hasattr(handlers, "handle_webapp_data"):
        app.add_handler(MessageHandler(filters.StatusUpdate.WEB_APP_DATA, handlers.handle_webapp_data))

    # /start –∑–∞–ø—É—Å–∫–∞–µ—Ç –æ–Ω–±–æ—Ä–¥–∏–Ω–≥
    app.add_handler(CommandHandler('start', handlers.start))
    app.add_handler(CommandHandler('profile', handlers.profile))

    if hasattr(handlers, "clear_db"):
        app.add_handler(CommandHandler("clear_db", handlers.clear_db))
    if hasattr(handlers, "delete_db"):
        app.add_handler(CommandHandler('delete_db', handlers.delete_db))
    if hasattr(handlers, "reminders"):
        app.add_handler(CommandHandler("reminders", handlers.reminders))

    # üì∏ –ü—Ä–∏—ë–º —Ñ–æ—Ç–æ –≤ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–µ: –∫–∞–∫ photo –∏ –∫–∞–∫ document(image/*)
    app.add_handler(MessageHandler((filters.PHOTO | filters.Document.IMAGE) & ~filters.COMMAND,
                                   handlers.register_photo))

    # –ò–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞: –≤—ã–±–æ—Ä –¥–Ω–µ–π, —Ä–µ–∂–∏–º–∞ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –¥–µ–ø–æ–∑–∏—Ç–∞
    # –í–ê–ñ–ù–û: –¥–æ–±–∞–≤–∏–ª–∏ dur_ —á—Ç–æ–±—ã –∫–Ω–æ–ø–∫–∏ ¬´–î–∞/–ù–µ—Ç (–æ–¥–∏–Ω–∞–∫–æ–≤–∞—è/—Ä–∞–∑–Ω–∞—è)¬ª —Ä–∞–±–æ—Ç–∞–ª–∏
    app.add_handler(CallbackQueryHandler(handlers.register_callback, pattern=r"^(day_|dep_|dur_)"))

    # –ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ—Ñ–∏–ª—å"
    app.add_handler(MessageHandler(filters.Regex("^üìä –ü—Ä–æ—Ñ–∏–ª—å$"), handlers.profile))

    # –¢–µ–∫—Å—Ç: —Å–Ω–∞—á–∞–ª–∞ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥, –æ—Å—Ç–∞–ª—å–Ω–æ–µ ‚Äî –≤ –æ–±—â–∏–π —Ä–æ—É—Ç–µ—Ä
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handlers.handle_text))

    # –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å: –µ—Å–ª–∏ –µ—Å—Ç—å —Å–≤–æ—ë –º–µ–Ω—é
    if hasattr(handlers, "menu_callback"):
        app.add_handler(CallbackQueryHandler(handlers.menu_callback))

    logger.info("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")

    # 7) –°–æ–∑–¥–∞—ë–º –∏ –Ω–∞–∑–Ω–∞—á–∞–µ–º —Ç–µ–∫—É—â–∏–π event loop (—Ñ–∏–∫—Å –¥–ª—è Py3.12)
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)

    # 8) –ó–∞–ø—É—Å–∫ polling
    app.run_polling()  # –±–µ–∑ allowed_updates ‚Äî –ø—Ä–∏–º–µ—Ç –≤—Å–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é


if __name__ == '__main__':
    main()
