# main.py
import logging
import sys
import asyncio
from zoneinfo import ZoneInfo

from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    CallbackQueryHandler,
    filters,
    JobQueue,
    Defaults,
)

from config import settings
from database import Database
import handlers


def main():
    # 1) –õ–æ–≥–∏
    logging.basicConfig(level=logging.INFO)
    logger = logging.getLogger(__name__)

    # 2) FIX –¥–ª—è Windows/Python 3.12: –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –ø–æ–ª–∏—Ç–∏–∫–∞ event loop
    if sys.platform.startswith("win"):
        asyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy())

    # 3) –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î –¥–æ —Å—Ç–∞—Ä—Ç–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    asyncio.run(Database.init())

    # 4) –¢–∞–π–º–∑–æ–Ω–∞ –∏ –æ—á–µ—Ä–µ–¥—å –∑–∞–¥–∞—á (zoneinfo –≤–º–µ—Å—Ç–æ pytz)
    TZ = ZoneInfo(getattr(settings, "TIMEZONE", "Europe/Moscow"))
    jq = JobQueue()

    # 5) –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    app = (
        Application.builder()
        .token(settings.TELEGRAM_TOKEN)
        .job_queue(jq)                   # –ø—Ä–æ–∫–∏–¥—ã–≤–∞–µ–º JobQueue
        .defaults(Defaults(tzinfo=TZ))   # —Ç–∞–π–º–∑–æ–Ω–∞ –¥–ª—è job_queue/–¥–∞—Ç
        .build()
    )

    # 6) –•–µ–Ω–¥–ª–µ—Ä—ã
    app.add_handler(MessageHandler(filters.StatusUpdate.WEB_APP_DATA, handlers.handle_webapp_data))

    app.add_handler(CommandHandler('start', handlers.start))
    app.add_handler(CommandHandler('gym_task', handlers.gym_task))
    app.add_handler(CommandHandler('profile', handlers.profile))
    app.add_handler(CommandHandler('sendphoto', handlers.send_photo))
    # app.add_handler(CommandHandler('setup_reminders', handlers.setup_reminders)) –æ–±–Ω–æ–≤–∏—Ç—å –≤—Ä–µ–º—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
    app.add_handler(CommandHandler('delete_db', handlers.delete_db))

    # app.add_handler(MessageHandler(filters.Regex("^üèãÔ∏è –ü–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ$"), handlers.gym_task))
    app.add_handler(MessageHandler(filters.Regex("^üìä –ü—Ä–æ—Ñ–∏–ª—å$"), handlers.profile))
    app.add_handler(MessageHandler(filters.PHOTO & ~filters.COMMAND, handlers.handle_photo))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handlers.handle_text))

    # app.add_handler(CallbackQueryHandler(handlers.menu_callback))

    # (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) –æ–±—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    if hasattr(handlers, "error_handler"):
        app.add_error_handler(handlers.error_handler)

    logger.info("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")

    # 7) –ù–∞–¥—ë–∂–Ω—ã–π –∑–∞–ø—É—Å–∫ –ø–æ–¥ Windows: —Ä—É–∫–∞–º–∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Ü–∏–∫–ª –∏ polling
    async def _runner():
        await app.initialize()
        await app.start()
        await app.updater.start_polling()  # PTB v21+: —ç—Ç–æ –∫–æ—Ä—É—Ç–∏–Ω–∞
        try:
            await asyncio.Event().wait()   # –¥–µ—Ä–∂–∏–º –ø—Ä–æ—Ü–µ—Å—Å –∂–∏–≤—ã–º
        finally:
            await app.updater.stop()
            await app.stop()
            await app.shutdown()

    asyncio.run(_runner())


if __name__ == '__main__':
    main()
